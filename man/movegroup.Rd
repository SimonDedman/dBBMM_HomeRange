% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dBBMM.build.R, R/movegroup.R
\name{movegroup}
\alias{movegroup}
\title{Automates dynamic Brownian bridge construction across individuals}
\usage{
movegroup(
  data = NULL,
  ID = NULL,
  Datetime = NULL,
  Lat = NULL,
  Lon = NULL,
  Group = NULL,
  dat.TZ = "US/Eastern",
  proj = sp::CRS("+proj=longlat +datum=WGS84"),
  projectedCRS = "+init=epsg:32617",
  sensor = "VR2W",
  moveLocError = 1,
  timeDiffLong = 2,
  timeDiffUnits = "hours",
  center = TRUE,
  buffpct = 0.3,
  rasterExtent = NULL,
  rasterCRS = sp::CRS("+proj=utm +zone=17 +datum=WGS84"),
  rasterResolution = 50,
  dbblocationerror = "LocationError",
  dbbext = 3,
  dbbwindowsize = 23,
  writeRasterFormat = "ascii",
  writeRasterExtension = ".asc",
  writeRasterDatatype = "FLT4S",
  absVolumeAreaSaveName = "VolumeArea_AbsoluteScale.csv",
  savedir = tempdir(),
  alerts = TRUE
)

movegroup(
  data = NULL,
  ID = NULL,
  Datetime = NULL,
  Lat = NULL,
  Lon = NULL,
  Group = NULL,
  dat.TZ = "US/Eastern",
  proj = sp::CRS("+proj=longlat +datum=WGS84"),
  projectedCRS = "+init=epsg:32617",
  sensor = "VR2W",
  moveLocError = 1,
  timeDiffLong = 2,
  timeDiffUnits = "hours",
  center = TRUE,
  buffpct = 0.3,
  rasterExtent = NULL,
  rasterCRS = sp::CRS("+proj=utm +zone=17 +datum=WGS84"),
  rasterResolution = 50,
  dbblocationerror = "LocationError",
  dbbext = 3,
  dbbwindowsize = 23,
  writeRasterFormat = "ascii",
  writeRasterExtension = ".asc",
  writeRasterDatatype = "FLT4S",
  absVolumeAreaSaveName = "VolumeArea_AbsoluteScale.csv",
  savedir = tempdir(),
  alerts = TRUE
)
}
\arguments{
\item{data}{Data frame object containing the data. Requires columns Lat Lon 
DateTime ID and optionally a grouping column. Names specifide in later 
parameters. Grouping not currently implemented 2022-11-15, see Group 
parameter below.}

\item{ID}{Name of animal tag ID column in data.}

\item{Datetime}{Column name in data that contains date/time stamps for each 
recorded detection. Must be in POSIXct format.}

\item{Lat}{Name of latitude column in data.}

\item{Lon}{Name of longitude column in data.}

\item{Group}{Name of grouping column in data. UNUSED 2022-11-15}

\item{dat.TZ}{Timezone of data for as.POSIXct.}

\item{proj}{CRS for move function.}

\item{projectedCRS}{EPSG code for CRS for initial transform of latlon points;
corresponds to rasterCRS zone.}

\item{sensor}{Sensor for move function. Single character or vector with 
length of the number of coordinates. Optional.}

\item{moveLocError}{Location error (m) in the 'brownian.bridge.dyn' function 
in the 'move' package. Numeric. Either single or a vector of length nrow 
data. If using passive acoustic data this is the detection range of the 
receiver(s).}

\item{timeDiffLong}{Single numeric value. Threshold value in timeDiffUnits 
designating the length of long breaks in re-locations. Used for bursting a 
movement track into segments, thereby removing long breaks from the movement 
track. See ?move::bursted for details.}

\item{timeDiffUnits}{Character. Unit for timeDiffLong.}

\item{center}{Do you want to center the move object within extent? See 
spTransform.}

\item{buffpct}{Buffer extent for raster creation, proportion of 1.}

\item{rasterExtent}{Extent of raster created around data. If NULL, raster 
extent calculated from data, buffpct, rasterResolution. Else length 4 vector,
 c(xmn, xmx, ymn, ymx) decimal latlon degrees. Don't go to 90 (degrees) north
 or south for ymax or ymin. Doesn't prevent constraint to data limits (in 
plot anyway), but prevents raster clipping crash.}

\item{rasterCRS}{CRS for raster creation.}

\item{rasterResolution}{Single numeric value to set raster resolution - cell 
size in metres? 111000: 1 degree lat = 111km.}

\item{dbblocationerror}{Location.error param in 'brownian.bridge.dyn' 
function in the 'move' package. single numeric value or vector of the length 
of coordinates that describes the error of the location (sender/receiver) 
system in map units. Or a character string with the name of the column 
containing the location error can be provided. Could use the same as 
moveLocError?.}

\item{dbbext}{Ext param in the 'brownian.bridge.dyn' function in the 'move' 
package. Extends bounding box around track. Numeric single (all edges), 
double (x & y), or 4 (xmin xmax ymin ymax). Default 0.3.}

\item{dbbwindowsize}{window.size param in the 'brownian.bridge.dyn' function 
in the 'move' package. The size of the moving window along the track. Larger 
windows provide more stable/accurate estimates of the brownian motion 
variance but are less well able to capture more frequent changes in behavior.
 This number has to be odd. A dBBMM is not run if total detections of 
 individual < window size (default 31).}

\item{writeRasterFormat}{Character. Output file type. ascii. TO DEPRECIATE.}

\item{writeRasterExtension}{Character. Output file extension. Should match 
character writeRasterFormat. TO DEPRECIATE.}

\item{writeRasterDatatype}{Character. Data type for writing values to disk. 
TO DEPRECIATE.}

\item{absVolumeAreaSaveName}{File name plus extension where UD estimates are 
saved. TO DEPRECIATE.}

\item{savedir}{Save outputs to a temporary directory (default) else change 
to desired directory e.g. "/home/me/folder/". Do not use getwd() for this. 
Include terminal slash.}

\item{alerts}{Audio warning for failures.}
}
\value{
Individual-level utilization distributions, saved as rasters, as well
 as calculated volume area estimates for 50 and 95pct contours, saved in a 
 .csv file.

saved to disk.

Individual-level utilization distributions, saved as rasters, as well
 as calculated volume area estimates for 50 and 95pct contours, saved in a 
 .csv file.

saved to disk.
}
\description{
Automates dynamic Brownian bridge movement model calculation for utilization distribution (UD) estimation for multiple 
individuals simultaneously, via the 'brownian.bridge.dyn()' function in the 'move' package.

Automates dynamic Brownian bridge movement model calculation for utilization distribution (UD) estimation for multiple 
individuals simultaneously, via the 'brownian.bridge.dyn()' function in the 'move' package.
}
\details{
Step 1. Filter individuals. 
Remove those individuals for which there is insufficient data i.e. number of re-locations is smaller than the window size parameter value (default = 31). 

Step 2. Generate universal raster. 
Based on all remaining data, a universal raster is generated where the calculated UDs are plotted into. 

Step 3. Loop through individuals.
Individuals are looped through to construct individual-level movement models (on an absolute scale). See www.GitHub.com/SimonDedman/movegroup for issues, feedback, and development suggestions.

Errors and their origins:

Step 1. Filter individuals. 
Remove those individuals for which there is insufficient data i.e. number of re-locations is smaller than the window size parameter value (default = 31). 

Step 2. Generate universal raster. 
Based on all remaining data, a universal raster is generated where the calculated UDs are plotted into. 

Step 3. Loop through individuals.
Individuals are looped through to construct individual-level movement models (on an absolute scale). See www.GitHub.com/SimonDedman/movegroup for issues, feedback, and development suggestions.

Errors and their origins:
}
\examples{
\donttest{
# Not run
}

\donttest{
# Not run
}

}
\author{
Simon Dedman, \email{simondedman@gmail.com}

Maurits van Zinnicq Bergmann, \email{mauritsvzb@gmail.com}
}
